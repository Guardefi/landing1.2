# Multi-stage Dockerfile for React/Vite development with hot reload
FROM node:18-alpine as base

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Development stage with hot reload
FROM base as development

# Install global development tools
RUN npm install -g \
    npm@latest \
    @vitejs/plugin-react@latest

# Copy package files for better caching
COPY package*.json ./
COPY tsconfig*.json ./
COPY vite.config.ts ./
COPY tailwind.config.ts ./

# Install dependencies with legacy peer deps (as configured in project)
RUN npm ci --legacy-peer-deps --include=dev

# Copy source code
COPY src/ ./src/
COPY public/ ./public/
COPY index.html ./

# Create non-root user
RUN addgroup -g 1001 -S nodejs && adduser -S vite -u 1001 -G nodejs

# Change ownership
RUN chown -R vite:nodejs /app

# Switch to non-root user
USER vite

# Expose ports
EXPOSE 8080 24678

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8080 || exit 1

# Development server with hot reload
CMD ["npm", "run", "dev", "--", \
     "--host", "0.0.0.0", \
     "--port", "8080", \
     "--force"]

# Production build stage
FROM base as build

# Copy package files
COPY package*.json ./
COPY tsconfig*.json ./
COPY vite.config.ts ./
COPY tailwind.config.ts ./

# Install dependencies
RUN npm ci --legacy-peer-deps --only=production

# Copy source code
COPY src/ ./src/
COPY public/ ./public/
COPY index.html ./

# Build for production
RUN npm run build

# Production stage with nginx
FROM nginx:alpine as production

# Copy built assets
COPY --from=build /app/dist /usr/share/nginx/html

# Copy nginx configuration
COPY nginx.conf /etc/nginx/nginx.conf

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:80 || exit 1

# Expose port
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
