{
  "total_files": 100,
  "processed": 100,
  "failed": 0,
  "details": [
    {
      "file": "backend\\Bytecode\\api\\run_tests.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\Bytecode\\api\\test_enterprise_command_router.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\Bytecode\\api\\test_with_server.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\Bytecode\\tests\\test_Bytecode.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\Bytecode\\tests\\test_api_endpoints.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\Bytecode\\tests\\test_basic.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\Bytecode\\tests\\test_comparison_engine.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\Bytecode\\tests\\test_core_modules.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\Bytecode\\tests\\test_corrected_validation.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\Bytecode\\tests\\test_normalizer.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\Bytecode\\tests\\test_similarity_engine.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\Bytecode\\tests\\test_validation.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\audit_trail\\tests\\test_audit_trail.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\auth_proxy\\tests\\test_auth_proxy.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\bridge\\tests\\conftest.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\bridge\\tests\\test_bridge.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\bridge\\tests\\unit\\test_bridge_transaction.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\config\\tests\\test_config.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\decorators\\tests\\test_decorators.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\honeypot\\final_test_report.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\honeypot\\run_tests.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\honeypot\\test_api.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\honeypot\\test_comprehensive.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\honeypot\\test_performance.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\honeypot\\test_react_integration.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\honeypot\\tests\\conftest.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\honeypot\\tests\\test_honeypot.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\honeypot\\tests\\test_risk_level.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\honeypot\\tests\\test_static_engine.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\mempool\\test_api_startup.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\mempool\\test_database_api.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\mempool\\test_live_api.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\mempool\\tests\\conftest.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\mempool\\tests\\integration\\test_api.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\mempool\\tests\\test_mempool.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\mempool\\tests\\unit\\test_mempool_monitor.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\mev_bot\\tests\\test_guardian_types.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\mev_bot\\tests\\test_mev_bot.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\middleware\\tests\\test_middleware.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\quantum\\test_api_integration.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\quantum\\tests\\test_enterprise.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\quantum\\tests\\test_quantum.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\scanner\\test_docker_plugins.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\scanner\\test_enhanced_scanner.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\scanner\\test_plugins.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\scanner\\tests\\integration\\test_enhanced_scanner.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\scanner\\tests\\test_models.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\scanner\\tests\\test_plugin_manager.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\scanner\\tests\\test_scanner.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\time_machine\\tests\\test_comprehensive.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\time_machine\\tests\\test_replay_smoke.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\time_machine\\tests\\test_time_machine.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\usage_metering\\tests\\__init__.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\usage_metering\\tests\\conftest.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\usage_metering\\tests\\test_api.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\usage_metering\\tests\\test_integration.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\usage_metering\\tests\\test_metrics_exporter.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\usage_metering\\tests\\test_stripe_service.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\usage_metering\\tests\\test_usage_metering.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\usage_metering\\tests\\test_usage_tracker.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\utils\\tests\\test_utils.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "backend\\wallet_guard\\tests\\test_wallet_guard.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "comprehensive_integration_test.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "fix_all_tests.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "monitoring\\test_monitoring.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "packages\\backend\\reporting\\tests\\conftest.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "packages\\backend\\reporting\\tests\\test_app.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "packages\\core\\tests\\log_usage_example.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "packages\\core\\tests\\simple_test.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "packages\\core\\tests\\test_api.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "packages\\core\\tests\\test_mev_bot.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "packages\\core\\tests\\test_system.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "reporting\\test_system.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "reporting\\tests\\test_api_routes.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "reporting\\tests\\test_diff_engine.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "reporting\\tests\\test_writer_html.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "services\\api-gateway\\tests\\test_api-gateway.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "services\\api-gateway\\tests\\test_routes.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "services\\bridge-service\\tests\\test_bridge-service.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "simple_working_test.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "test_runner.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "test_runner_clean.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "tests\\__init__.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "tests\\api\\test_static_api.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "tests\\e2e\\__init__.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "tests\\fixtures\\__init__.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "tests\\integration\\__init__.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "tests\\performance\\__init__.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "tests\\performance\\cost-model-analyzer.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "tests\\performance\\locustfile.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "tests\\security\\__init__.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "tests\\security\\security_tests.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "tests\\test_api_gateway_basic.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "tests\\test_backend_comprehensive.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "tests\\unit\\__init__.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "tests\\unit\\bytecode\\test_api_main.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "tests\\unit\\bytecode\\test_comparison_engine.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "tests\\unit\\bytecode\\test_similarity_engine.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "tests\\unit\\test_retry.py",
      "success": true,
      "message": "Successfully processed"
    },
    {
      "file": "tests\\unit\\test_rpc_decorator.py",
      "success": true,
      "message": "Successfully processed"
    }
  ]
}