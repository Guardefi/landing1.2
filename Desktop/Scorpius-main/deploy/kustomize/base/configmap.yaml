apiVersion: v1
kind: ConfigMap
metadata:
  name: scorpius-config
  namespace: scorpius-enterprise
data:
  # Application Configuration
  LOG_LEVEL: "INFO"
  ENVIRONMENT: "production"
  PLATFORM_VERSION: "1.0.0"
  
  # Feature Flags
  METRICS_ENABLED: "true"
  TRACING_ENABLED: "true"
  AUDIT_ENABLED: "true"
  DEBUG_MODE: "false"
  
  # Security Configuration
  CORS_ENABLED: "true"
  RATE_LIMITING_ENABLED: "true"
  JWT_EXPIRY_HOURS: "24"
  SESSION_TIMEOUT_MINUTES: "30"
  
  # Database Configuration
  DB_POOL_SIZE: "10"
  DB_MAX_CONNECTIONS: "50"
  DB_CONNECTION_TIMEOUT: "30"
  DB_QUERY_TIMEOUT: "60"
  
  # Cache Configuration
  REDIS_TTL_SECONDS: "3600"
  REDIS_MAX_CONNECTIONS: "20"
  CACHE_ENABLED: "true"
  
  # Monitoring Configuration
  METRICS_PORT: "8080"
  METRICS_PATH: "/metrics"
  HEALTH_CHECK_PORT: "8081"
  HEALTH_CHECK_PATH: "/health"
  
  # Chain Configuration
  SUPPORTED_CHAINS: "ethereum,bitcoin,polygon,arbitrum,optimism"
  DEFAULT_CHAIN: "ethereum"
  CHAIN_TIMEOUT_SECONDS: "30"
  
  # Usage Metering
  BILLING_CYCLE_DAYS: "30"
  USAGE_AGGREGATION_MINUTES: "5"
  BILLING_WEBHOOK_RETRY_ATTEMPTS: "3"
  
  # Security Headers
  SECURITY_HEADERS_ENABLED: "true"
  HSTS_MAX_AGE: "31536000"
  CSP_ENABLED: "true"
  
  # API Configuration
  API_VERSION: "v1"
  API_RATE_LIMIT: "1000"
  API_BURST_LIMIT: "100"
  API_TIMEOUT_SECONDS: "30"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: scorpius-enterprise
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    
    error_log /var/log/nginx/error.log notice;
    pid /var/run/nginx.pid;
    
    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }
    
    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        # Logging
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        
        access_log /var/log/nginx/access.log main;
        
        # Basic Settings
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        server_tokens off;
        
        # Security Headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # Gzip Settings
        gzip on;
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/json
            application/javascript
            application/xml+rss
            application/atom+xml
            image/svg+xml;
        
        # Rate Limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
        
        # Upstream Services
        upstream wallet-guard {
            server wallet-guard-service:8000;
            keepalive 32;
        }
        
        upstream usage-metering {
            server usage-metering-service:8000;
            keepalive 32;
        }
        
        upstream auth-proxy {
            server auth-proxy-service:8000;
            keepalive 32;
        }
        
        upstream audit-trail {
            server audit-trail-service:8000;
            keepalive 32;
        }
        
        upstream reporting {
            server reporting-service:8000;
            keepalive 32;
        }
        
        # Main Server Block
        server {
            listen 80 default_server;
            listen [::]:80 default_server;
            server_name _;
            
            # Redirect HTTP to HTTPS
            return 301 https://$host$request_uri;
        }
        
        server {
            listen 443 ssl http2 default_server;
            listen [::]:443 ssl http2 default_server;
            server_name scorpius.company.com;
            
            # SSL Configuration
            ssl_certificate /etc/ssl/certs/tls.crt;
            ssl_certificate_key /etc/ssl/private/tls.key;
            ssl_protocols TLSv1.2 TLSv1.3;
            ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
            ssl_prefer_server_ciphers off;
            ssl_session_cache shared:SSL:10m;
            ssl_session_timeout 10m;
            ssl_stapling on;
            ssl_stapling_verify on;
            
            # API Routes
            location /api/v1/wallet/ {
                limit_req zone=api burst=20 nodelay;
                proxy_pass http://wallet-guard;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_cache_bypass $http_upgrade;
            }
            
            location /api/v1/usage/ {
                limit_req zone=api burst=20 nodelay;
                proxy_pass http://usage-metering;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_cache_bypass $http_upgrade;
            }
            
            location /api/v1/auth/ {
                limit_req zone=login burst=5 nodelay;
                proxy_pass http://auth-proxy;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_cache_bypass $http_upgrade;
            }
            
            location /api/v1/audit/ {
                limit_req zone=api burst=10 nodelay;
                proxy_pass http://audit-trail;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_cache_bypass $http_upgrade;
            }
            
            location /api/v1/reports/ {
                limit_req zone=api burst=5 nodelay;
                proxy_pass http://reporting;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_cache_bypass $http_upgrade;
            }
            
            # Health Check Endpoint
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
            
            # Metrics endpoint (internal only)
            location /metrics {
                allow 10.0.0.0/8;
                allow 172.16.0.0/12;
                allow 192.168.0.0/16;
                deny all;
                
                proxy_pass http://127.0.0.1:9113/metrics;
                access_log off;
            }
            
            # Default location
            location / {
                return 404;
            }
        }
    }
