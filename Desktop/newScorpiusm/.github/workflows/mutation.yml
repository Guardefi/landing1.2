name: üî¨ Mutation Testing

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main]

jobs:
  mutation-testing:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        pip install -r backend/requirements.txt
        
    - name: Run unit tests first
      run: |
        pytest --cov=backend --cov-branch --cov-fail-under=75
        
    - name: Run mutation tests
      run: |
        mutmut run --paths-to-mutate backend
        
    - name: Generate mutation report
      run: |
        mutmut show > mutation-report.txt
        mutmut results > mutation-results.txt
        
    - name: Check mutation score
      run: |
        MUTATION_SCORE=$(mutmut results | grep -oP 'Survived: \d+' | grep -oP '\d+')
        TOTAL_MUTATIONS=$(mutmut results | grep -oP 'Total: \d+' | grep -oP '\d+')
        if [ "$TOTAL_MUTATIONS" -gt 0 ]; then
          SCORE_PERCENT=$((100 - (MUTATION_SCORE * 100 / TOTAL_MUTATIONS)))
          echo "Mutation Score: $SCORE_PERCENT%"
          if [ "$SCORE_PERCENT" -lt 80 ]; then
            echo "‚ùå Mutation score $SCORE_PERCENT% is below required 80%"
            exit 1
          fi
          echo "‚úÖ Mutation score $SCORE_PERCENT% meets requirements"
        else
          echo "‚ö†Ô∏è No mutations generated"
        fi
        
    - name: Upload mutation artifacts
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: mutation-testing-results
        path: |
          mutation-report.txt
          mutation-results.txt
          .mutmut-cache
