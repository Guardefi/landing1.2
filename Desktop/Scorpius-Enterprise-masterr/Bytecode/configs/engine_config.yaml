# Similarity Engine Configuration
similarity_engine:
  # Core similarity settings
  threshold: 0.7
  top_k: 10
  use_gpu: true
  cache_size: 10000
  
  # Multi-dimensional comparison weights
  dimension_weights:
    instruction: 0.4
    operand: 0.2
    control_flow: 0.25
    data_flow: 0.15
  
  # Neural network model settings
  model_config:
    vocab_size: 10000
    embedding_dim: 256
    hidden_dim: 512
    num_heads: 8
    dropout: 0.3
    
  # Performance settings
  batch_size: 32
  max_sequence_length: 5000
  enable_parallel_processing: true
  
# Preprocessing Configuration
preprocessing:
  # Normalization settings
  normalize_constants: true
  normalize_addresses: true
  normalize_function_selectors: true
  remove_metadata: true
  apply_peephole_optimizations: true
  normalize_jump_destinations: true
  
  # Feature extraction settings
  extract_control_flow: true
  extract_data_flow: true
  extract_structural_features: true
  max_n_gram_size: 3

# Training Configuration
training:
  # Model training parameters
  epochs: 100
  learning_rate: 1e-4
  weight_decay: 1e-4
  batch_size: 32
  validation_split: 0.2
  
  # Loss function settings
  contrastive_margin: 2.0
  contrastive_weight: 0.1
  
  # Learning rate scheduling
  scheduler_type: "cosine"
  scheduler_T_max: 100
  
  # Early stopping
  early_stopping_patience: 10
  early_stopping_delta: 0.01
  
  # Checkpointing
  save_best_only: true
  save_frequency: 5

# Monitoring Configuration
monitoring:
  # Performance metrics
  enable_performance_monitoring: true
  log_level: "INFO"
  
  # System metrics
  track_gpu_usage: true
  track_memory_usage: true
  track_cpu_usage: true
  
  # Export settings
  export_metrics: true
  metrics_export_interval: 100

# API Configuration
api:
  # Server settings
  host: "0.0.0.0"
  port: 8000
  workers: 4
  
  # Request limits
  max_request_size: "10MB"
  rate_limit: 100  # requests per minute
  timeout: 30  # seconds
  
  # CORS settings
  enable_cors: true
  cors_origins: ["*"]
  
  # Authentication (optional)
  enable_auth: false
  api_key_header: "X-API-Key"

# Vector Database Configuration
vector_db:
  # Database type (faiss, pinecone, chroma, etc.)
  type: "faiss"
  
  # FAISS settings
  faiss:
    index_type: "IndexFlatIP"  # Inner Product for cosine similarity
    nlist: 100  # number of clusters for IVF indices
    
  # Pinecone settings (if using Pinecone)
  pinecone:
    api_key: ""
    environment: "us-west1-gcp"
    index_name: "bytecode-similarity"
    dimension: 256
    
  # ChromaDB settings (if using ChromaDB)
  chroma:
    persist_directory: "./chroma_db"
    collection_name: "bytecode_embeddings"

# Logging Configuration
logging:
  version: 1
  disable_existing_loggers: false
  formatters:
    standard:
      format: "%(asctime)s [%(levelname)s] %(name)s: %(message)s"
  handlers:
    default:
      level: INFO
      formatter: standard
      class: logging.StreamHandler
      stream: ext://sys.stdout
    file:
      level: DEBUG
      formatter: standard
      class: logging.FileHandler
      filename: logs/scorpius.log
      mode: a
  loggers:
    "":
      level: INFO
      handlers: [default, file]
      propagate: false

# Data Paths
data:
  # Training data
  training_data_path: "data/training_pairs.json"
  validation_data_path: "data/validation_pairs.json"
  test_data_path: "data/test_pairs.json"
  
  # Model paths
  model_save_path: "models/"
  checkpoint_path: "checkpoints/"
  
  # Cache paths
  cache_directory: "cache/"
  embeddings_cache: "cache/embeddings/"
  
  # Export paths
  results_export_path: "results/"
  metrics_export_path: "results/metrics/"
