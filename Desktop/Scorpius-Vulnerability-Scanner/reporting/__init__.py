"""Reporting module for Scorpius Vulnerability Scanner

This module provides functionality for generating comprehensive vulnerability
reports in various formats from scan results.
"""

from typing import Dict, Any, Union

from reporting.report_generator import (
    ReportFormat, 
    ReportGenerator, 
    JsonReportGenerator,
    ReportingManager, 
    generate
)
from reporting.html_report import HtmlReportGenerator
from reporting.markdown_report import MarkdownReportGenerator

# Create a default manager and register all available generators
_default_manager = ReportingManager()
_default_manager.register_generator(ReportFormat.HTML, HtmlReportGenerator())
_default_manager.register_generator(ReportFormat.MARKDOWN, MarkdownReportGenerator())

__all__ = [
    'ReportFormat',
    'ReportGenerator',
    'JsonReportGenerator',
    'HtmlReportGenerator',
    'MarkdownReportGenerator',
    'ReportingManager',
    'generate',
    'generate_report'
]


def generate_report(scan_results: Dict[str, Any], output_path: str, 
                  format: Union[ReportFormat, str] = ReportFormat.JSON) -> str:
    """Generate a report from scan results
    
    Args:
        scan_results: The scan results to generate a report from
        output_path: Path to save the report to
        format: Format to generate the report in
        
    Returns:
        str: Path to the generated report
    """
    return _default_manager.generate_report(scan_results, output_path, format)