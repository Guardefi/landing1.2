# Kubernetes Deployment Configuration for Scorpius Production
apiVersion: v1
kind: Namespace
metadata:
  name: scorpius-prod
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scorpius-backend
  namespace: scorpius-prod
  labels:
    app: scorpius-backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: scorpius-backend
  template:
    metadata:
      labels:
        app: scorpius-backend
    spec:
      containers:
        - name: backend
          image: scorpius/backend:latest
          ports:
            - containerPort: 8000
          env:
            - name: ENVIRONMENT
              value: 'production'
            - name: DB_HOST
              value: 'postgres-service'
            - name: REDIS_HOST
              value: 'redis-service'
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: scorpius-backend-service
  namespace: scorpius-prod
spec:
  selector:
    app: scorpius-backend
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scorpius-frontend
  namespace: scorpius-prod
  labels:
    app: scorpius-frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: scorpius-frontend
  template:
    metadata:
      labels:
        app: scorpius-frontend
    spec:
      containers:
        - name: frontend
          image: scorpius/frontend:latest
          ports:
            - containerPort: 80
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: scorpius-frontend-service
  namespace: scorpius-prod
spec:
  selector:
    app: scorpius-frontend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: scorpius-ingress
  namespace: scorpius-prod
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
spec:
  tls:
    - hosts:
        - scorpius.yourdomain.com
      secretName: scorpius-tls
  rules:
    - host: scorpius.yourdomain.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: scorpius-frontend-service
                port:
                  number: 80
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: scorpius-backend-service
                port:
                  number: 8000
