name: Production Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run linters
        run: |
          flake8 .
          black --check .
          isort --check .

  test:
    runs-on: ubuntu-latest
    needs: lint
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: scorpius_test
          POSTGRES_USER: scorpius
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      ganache:
        image: trufflesuite/ganache-cli:latest
        ports:
          - 8545:8545
        options: >-
          --health-cmd "curl -f http://localhost:8545"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov
      - name: Run tests
        run: |
          pytest -v --cov=.

  build:
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        service: [api-gateway, bridge-service, mempool, honeypot, quantum, scanner]
    steps:
      - uses: actions/checkout@v3
      - name: Build Docker image
        run: |
          docker build -t scorpius/${{ matrix.service }}:latest services/${{ matrix.service }}
      - name: Push to registry
        run: |
          docker tag scorpius/${{ matrix.service }}:latest registry.example.com/scorpius/${{ matrix.service }}:latest
          docker push registry.example.com/scorpius/${{ matrix.service }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to production
        run: |
          kubectl apply -f infrastructure/k8s/production/
          kubectl rollout restart deployment/scorpius-${{ matrix.service }}
