# Kubernetes Network Policies for Scorpius Enterprise Platform
# Implements zero-trust network security with deny-by-default approach

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
  namespace: scorpius-production
  labels:
    app.kubernetes.io/name: scorpius
    app.kubernetes.io/component: network-policy
    security.scorpius.io/policy-type: deny-all
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  # No ingress or egress rules = deny all traffic

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: api-gateway-policy
  namespace: scorpius-production
  labels:
    app.kubernetes.io/name: scorpius
    app.kubernetes.io/component: api-gateway
    security.scorpius.io/policy-type: application
spec:
  podSelector:
    matchLabels:
      app: api-gateway
  policyTypes:
  - Ingress
  - Egress
  
  # Ingress rules
  ingress:
  # Allow ingress from internet (LoadBalancer/Ingress Controller)
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8000
  
  # Allow health checks from kube-system
  - from:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: TCP
      port: 8000
  
  # Egress rules
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  
  # Allow communication to backend services
  - to:
    - podSelector:
        matchLabels:
          tier: backend
    ports:
    - protocol: TCP
      port: 8000
  
  # Allow communication to databases
  - to:
    - podSelector:
        matchLabels:
          app: postgres
    ports:
    - protocol: TCP
      port: 5432
  
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  
  # Allow HTTPS to external APIs (Web3 providers, etc.)
  - to: []
    ports:
    - protocol: TCP
      port: 443

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: backend-services-policy
  namespace: scorpius-production
  labels:
    app.kubernetes.io/name: scorpius
    app.kubernetes.io/component: backend
    security.scorpius.io/policy-type: application
spec:
  podSelector:
    matchLabels:
      tier: backend
  policyTypes:
  - Ingress
  - Egress
  
  # Ingress rules
  ingress:
  # Allow traffic from API Gateway
  - from:
    - podSelector:
        matchLabels:
          app: api-gateway
    ports:
    - protocol: TCP
      port: 8000
  
  # Allow inter-service communication
  - from:
    - podSelector:
        matchLabels:
          tier: backend
    ports:
    - protocol: TCP
      port: 8000
  
  # Egress rules
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  
  # Allow communication to databases
  - to:
    - podSelector:
        matchLabels:
          app: postgres
    ports:
    - protocol: TCP
      port: 5432
  
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  
  # Allow HTTPS to external APIs
  - to: []
    ports:
    - protocol: TCP
      port: 443

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: database-policy
  namespace: scorpius-production
  labels:
    app.kubernetes.io/name: scorpius
    app.kubernetes.io/component: database
    security.scorpius.io/policy-type: data-store
spec:
  podSelector:
    matchLabels:
      app: postgres
  policyTypes:
  - Ingress
  - Egress
  
  # Ingress rules
  ingress:
  # Allow connections from application pods only
  - from:
    - podSelector:
        matchLabels:
          app: api-gateway
    - podSelector:
        matchLabels:
          tier: backend
    ports:
    - protocol: TCP
      port: 5432
  
  # Egress rules (minimal required)
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: redis-policy
  namespace: scorpius-production
  labels:
    app.kubernetes.io/name: scorpius
    app.kubernetes.io/component: cache
    security.scorpius.io/policy-type: data-store
spec:
  podSelector:
    matchLabels:
      app: redis
  policyTypes:
  - Ingress
  - Egress
  
  # Ingress rules
  ingress:
  # Allow connections from application pods only
  - from:
    - podSelector:
        matchLabels:
          app: api-gateway
    - podSelector:
        matchLabels:
          tier: backend
    ports:
    - protocol: TCP
      port: 6379
  
  # Egress rules (minimal required)
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: monitoring-policy
  namespace: scorpius-production
  labels:
    app.kubernetes.io/name: scorpius
    app.kubernetes.io/component: monitoring
    security.scorpius.io/policy-type: observability
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: prometheus
  policyTypes:
  - Ingress
  - Egress
  
  # Ingress rules
  ingress:
  # Allow access from Grafana
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: grafana
    ports:
    - protocol: TCP
      port: 9090
  
  # Egress rules
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
  
  # Allow scraping metrics from all application pods
  - to:
    - podSelector: {}
    ports:
    - protocol: TCP
      port: 8000  # Application metrics port
