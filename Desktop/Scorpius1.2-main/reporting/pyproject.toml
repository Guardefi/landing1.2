[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "scorpius-reporting"
version = "1.0.0"
description = "Enterprise-grade reporting engine for smart contract vulnerability scanning"
authors = [
    {name = "Scorpius Security", email = "security@scorpius.dev"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Security",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: System :: Monitoring",
]
keywords = [
    "security",
    "smart-contracts",
    "vulnerability-scanner",
    "reporting",
    "audit",
    "blockchain",
    "ethereum"
]

dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "sqlalchemy[asyncio]>=2.0.0",
    "alembic>=1.12.0",
    "asyncpg>=0.29.0",
    "pydantic>=2.4.0",
    "pydantic-settings>=2.0.0",
    "jinja2>=3.1.0",
    "markdown>=3.5.0",
    "weasyprint>=60.0",
    "playwright>=1.40.0",
    "pypdf2>=3.0.0",
    "cryptography>=41.0.0",
    "reportlab>=4.0.0",
    "pillow>=10.0.0",
    "pandas>=2.1.0",
    "numpy>=1.25.0",
    "plotly>=5.17.0",
    "matplotlib>=3.8.0",
    "seaborn>=0.12.0",
    "aiofiles>=23.2.0",
    "python-multipart>=0.0.6",
    "openpyxl>=3.1.0",
    "asyncio-pool>=0.6.0",
    "aiohttp>=3.9.0",
    "marshmallow>=3.20.0",
    "jsonschema>=4.19.0",
    "cerberus>=1.3.0",
    "python-dateutil>=2.8.0",
    "pytz>=2023.3",
    "click>=8.1.0",
    "rich>=13.6.0",
    "typer>=0.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]

test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.24.0",
    "factory-boy>=3.3.0",
]

docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.2.0",
    "mkdocstrings[python]>=0.22.0",
]

[project.urls]
Homepage = "https://github.com/scorpius-security/scorpius-reporting"
Documentation = "https://docs.scorpius.dev/reporting"
Repository = "https://github.com/scorpius-security/scorpius-reporting"
Issues = "https://github.com/scorpius-security/scorpius-reporting/issues"

[project.scripts]
scorpius-report = "reporting.cli:app"
scorpius-server = "reporting.app:main"

[tool.setuptools.packages.find]
include = ["reporting*"]

[tool.setuptools.package-data]
reporting = [
    "templates/*.html",
    "templates/*.css",
    "templates/*.js",
    "static/*",
    "static/fonts/*",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["reporting"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=reporting",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["reporting"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
