[tool.poetry]
name = "scorpius-enterprise-platform"
version = "0.1.0"
description = "Production-ready backend orchestrator for Scorpius Enterprise Platform"
authors = ["Scorpius Team <team@scorpius.dev>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/scorpius/enterprise-platform"
repository = "https://github.com/scorpius/enterprise-platform"
documentation = "https://docs.scorpius.dev"
package-mode = false

[tool.poetry.dependencies]
python = "^3.11"
core = {path = "packages/core", develop = true}

# Web framework
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}

# Data and validation
pydantic = "^2.5.0"
sqlalchemy = "^2.0.23"
psycopg2-binary = "^2.9.9"

# Cache and messaging
redis = {extras = ["hiredis"], version = "^5.0.1"}

# Monitoring and logging
prometheus-client = "^0.19.0"
structlog = "^23.2.0"
opentelemetry-api = "^1.21.0"
opentelemetry-sdk = "^1.21.0"
opentelemetry-instrumentation-fastapi = "^0.42b0"

# Security
cryptography = "^41.0.7"
pyjwt = "^2.8.0"
bcrypt = "^4.1.2"

# HTTP and file handling
httpx = "^0.25.2"
aiofiles = "^23.2.1"
python-multipart = "^0.0.6"

# Configuration and utilities
pyyaml = "^6.0.1"
click = "^8.1.7"
rich = "^13.7.0"
python-dotenv = "^1.0.0"

# Development tools
isort = "^5.12.0"
black = "^23.11.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
httpx = "^0.25.2"
factory-boy = "^3.3.0"

# Code quality
flake8 = "^6.1.0"
mypy = "^1.7.1"
bandit = "^1.7.5"
safety = "^2.3.5"

# Load testing
locust = "^2.17.0"

[tool.poetry.group.security.dependencies]
bandit = "^1.7.5"
safety = "^2.3.5"
semgrep = "^1.45.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
scorpius = "scripts.cli:main"

# Tool configurations
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | packages
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["scorpius_core", "services"]
skip_glob = ["packages/*"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
exclude = ["packages/"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "security: marks tests as security tests",
    "performance: marks tests as performance tests",
]

[tool.coverage.run]
source = ["services", "scripts"]
omit = ["*/tests/*", "packages/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "packages"]
skips = ["B101", "B601"]
