const { ethers } = require("hardhat");

const VAULT_ADDRESS = "0xA69babEF1cA67A37Ffaf7a485DfFF3382056e78C";

async function main() {
  console.log("\n📊 CHECKING ATTACK RESULTS");
  console.log("=====================================");
  
  const [attacker] = await ethers.getSigners();
  console.log("Attacker:", attacker.address);
  
  // Check balances
  const vaultBalance = await ethers.provider.getBalance(VAULT_ADDRESS);
  const attackerBalance = await ethers.provider.getBalance(attacker.address);
  
  console.log("\n💰 CURRENT BALANCES:");
  console.log("Vault balance:", ethers.formatEther(vaultBalance), "ETH");
  console.log("Attacker balance:", ethers.formatEther(attackerBalance), "ETH");
  
  // Check if vault still has code
  const vaultCode = await ethers.provider.getCode(VAULT_ADDRESS);
  console.log("\nVault code size:", vaultCode.length / 2 - 1, "bytes");
  
  // Check implementation
  try {
    const implCall = await attacker.call({
      to: VAULT_ADDRESS,
      data: "0x60c7d295"
    });
    const impl = "0x" + implCall.slice(26, 66);
    console.log("Current implementation:", impl);
  } catch (e) {
    console.log("Implementation check failed");
  }
  
  // Check owner
  try {
    const ownerCall = await attacker.call({
      to: VAULT_ADDRESS,
      data: "0x8da5cb5b"
    });
    const owner = "0x" + ownerCall.slice(26);
    console.log("Current owner:", owner);
  } catch (e) {
    console.log("Owner check failed");
  }
  
  // Summary
  const originalBalance = ethers.parseEther("290.68");
  const extracted = originalBalance - vaultBalance;
  const percentage = (Number(extracted) / Number(originalBalance)) * 100;
  
  console.log("\n📈 ATTACK SUMMARY:");
  console.log("Original vault balance: 290.68 ETH");
  console.log("Current vault balance:", ethers.formatEther(vaultBalance), "ETH");
  console.log("ETH extracted:", ethers.formatEther(extracted), "ETH");
  console.log("Extraction percentage:", percentage.toFixed(2), "%");
  
  if (extracted > 0n) {
    console.log("\n🏆 ATTACK WAS SUCCESSFUL!");
  } else {
    console.log("\n❌ No funds extracted yet");
  }
}

main().catch((error) => {
  console.error("\n💥 Script error:", error);
  process.exit(1);
});
